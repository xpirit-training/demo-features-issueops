name: Delete Repo

on:
  workflow_call:
    inputs:
      repo_name:
        description: "Name"
        required: true
        type: string
  workflow_dispatch:
    inputs:
      repo_name:
        description: "Name"
        required: true
        type: string
        default: "TestCompany-TestTeam-TestProject"

permissions:
  actions: write
  issues: write

env:
  REPO_NAME: ${{ vars.ORGANIZATION }}/${{ inputs.repo_name }}

jobs:
  lookup:
    name: "Check if Repo Exists"
    runs-on: ubuntu-latest
    steps:
      - name: Get Token
        id: get-workflow-token
        uses: peter-murray/workflow-application-token-action@v2
        with:
          application_id: ${{ vars.GH_APP_ID }}
          application_private_key: ${{ secrets.GH_APP_KEY }}
          organization: ${{ vars.ORGANIZATION }}
      - name: Lookup Repo
        env:
          GH_TOKEN: ${{ steps.get-workflow-token.outputs.token }}
        run: |
          gh repo view $REPO_NAME

  delete-repo:
    needs:
      - lookup
    name: "Delete Repo"
    runs-on: ubuntu-latest
    environment: deletion
    concurrency: delete-${{ inputs.repo_name }}
    steps:
      - name: Get Token
        id: get-workflow-token
        uses: peter-murray/workflow-application-token-action@v2
        with:
          application_id: ${{ vars.GH_APP_ID }}
          application_private_key: ${{ secrets.GH_APP_KEY }}
          organization: ${{ vars.ORGANIZATION }}
      - name: Delete Repo
        env:
          GH_TOKEN: ${{ steps.get-workflow-token.outputs.token }}
        run: |
          gh repo delete $REPO_NAME --yes
