name: Handle Repo Deletion

on:
  workflow_call:

jobs:
  notify:
    name: "Notify Deletion Issue"
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      - uses: actions/checkout@v3.3.0
      - uses: ./.github/actions/comment-issue
        with:
          message: "@${{ github.event.issue.user.login }} a [workflow]($GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID) was started to handle your request"

  parse:
    name: "Parse Deletion Issue"
    runs-on: ubuntu-latest
    outputs:
      repo_name: ${{ steps.repo-name.outputs.repo_name }}
    steps:
      - uses: actions/checkout@v3.3.0
      - name: Parse Issue Form into JSON
        id: parse
        uses: zentered/issue-forms-body-parser@v2.0.0
      - name: Get Repo Name
        id: repo-name
        env:
          JSON: ${{ steps.parse.outputs.data }}
        run: |
          echo "repo_name=$(echo $JSON | jq -r '.name.text')" >> "$GITHUB_OUTPUT"

  handle:
    needs:
      - parse
    uses: ./.github/workflows/repo-deletion.yml
    with:
      repo_name: ${{ needs.parse.outputs.repo_name }}
    secrets: inherit

  comment:
    if: ${{ failure() }}
    needs:
      - notify
      - parse
      - handle
    name: "Comment Deletion Issue"
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      - uses: actions/checkout@v3.3.0
      - uses: ./.github/actions/comment-issue
        with:
          message: "@${{ github.event.issue.user.login }} the repository deletion failed...check the [workflow]($GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID) for details"

  close:
    if: ${{ success() }}
    needs:
      - notify
      - parse
      - handle
    name: "Close Deletion Issue"
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      - uses: actions/checkout@v3.3.0
      - uses: ./.github/actions/close-issue
        with:
          message: "@${{ github.event.issue.user.login }} your repository was successfully deleted"
