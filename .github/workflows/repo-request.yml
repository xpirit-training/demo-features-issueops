name: Create new repo for repo request

on:
  issues:
    types: [labeled]
  workflow_dispatch:
    inputs:
      json:
        description: "JSON"
        required: true
        type: string

permissions:
  contents: read
  issues: write

jobs:
  provide-json:
    name: "Provide json data"
    runs-on: ubuntu-latest
    outputs:
      json: ${{ steps.create-output.outputs.json }}
    steps:
      - name: Issue Forms Body Parser
        if: ${{ github.event.label && github.event.label.name == 'repo-request' }}
        id: parse
        uses: zentered/issue-forms-body-parser@v2.0.0
      - name: Create Output
        id: create-output
        run: |        
          if [[ ! -z '${{ steps.parse.outputs.data }}' ]]
          then
            echo 'json=${{ steps.parse.outputs.data }}' >> "$GITHUB_OUTPUT"
          else
            echo 'json=${{ github.event.inputs.json }}' >> "$GITHUB_OUTPUT"
          fi
  create-repo:
    name: "Create Repo"
    needs: provide-json
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.3.0
      - name: Get Repo Name
        id: generate-repo-name
        env:
          JSON: ${{ needs.provide-json.outputs.json }}
        run: |
          COMPANY=$(echo $JSON | jq -r '.company.text'  | sed 's/ (.*)//g' | sed 's/ /-/g' | tr '[:upper:]' '[:lower:]')    
          TEAM=$(echo $JSON | jq -r '.team.text' | sed 's/-.*//g' | sed 's/ /-/g' | tr '[:upper:]' '[:lower:]')
          PROJECT=$(echo $JSON | jq -r '.project.text' | sed 's/ /-/g' | tr '[:upper:]' '[:lower:]')
          RNAME=$(echo $JSON | jq -r '.name.text' | sed 's/ /-/g' | tr '[:upper:]' '[:lower:]')
          echo "name=${COMPANY}-${TEAM}-${PROJECT}-${RNAME}" >> "$GITHUB_OUTPUT"
      - name: Validate Repo Name
        env:
          REPO_NAME: ${{ steps.generate-repo-name.outputs.name }}
        run: |
          # shall not be empty
          if [ -z $REPO_NAME ]; then exit 1; fi
          # shall be alphanumeric and minus only
          if [[ "$REPO" =~ [^\-a-zA-Z0-9] ]]; then exit 1; fi
          # shall not start with minus
          if [[ "$REPO" == -* ]]; then exit 1; fi
          # shall not end with minus
          if [[ "$REPO" == *- ]]; then exit 1; fi
      - name: Get Attrbutes
        id: get-attributes
        env:
          JSON: ${{ needs.provide-json.outputs.json }}
        run: |
          echo "visibility=$(echo $JSON | jq -r '.visibility.text')" >> "$GITHUB_OUTPUT"
          echo "language=$(echo $JSON | jq -r '.language.text')" >> "$GITHUB_OUTPUT"
      - name: Get Token
        id: get-workflow-token
        uses: peter-murray/workflow-application-token-action@v2
        with:
          application_id: ${{ vars.GH_APP_ID }}
          application_private_key: ${{ secrets.GH_APP_KEY }}
          organization: ${{ vars.ORGANIZATION }}
      - name: Add files for initial commit
        env:
          LANGUAGE: ${{ steps.get-attributes.outputs.language }}
        run: |
          cp -r ./templates/languages/${LANGUAGE}/* .
          git add .
      - name: Create commit
        env:
          CI_COMMIT_MESSAGE: "chore(org): Initial commit"
        run: |
          git config --global user.name ${{ vars.CI_COMMIT_USER }}
          git config --global user.email ${{ vars.CI_COMMIT_USER_MAIL }}
          git commit -m "$CI_COMMIT_MESSAGE"
      - name: Create repo
        id: create-repo
        env:
          GH_TOKEN: ${{ steps.get-workflow-token.outputs.token }}
          REPO_NAME: ${{ steps.generate-repo-name.outputs.name }}
          VISIBILITY: ${{ steps.get-attributes.outputs.visibility }}
        run: |
          url=$(gh repo create xpirit-training/$REPO_NAME --$VISIBILITY --push)
          echo "repo_url=$url" >> "$GITHUB_OUTPUT"
    #comment-issue:   
    #name: "Comment issue"
    #if: ${{ github.event.label && github.event.label.name == 'repo-request' }}
    #needs: create-repo
    #runs-on: ubuntu-latest
    #steps: 
      #- name: Create comment and close issue on success
      #  if: success()
      #  env:
      #    GH_TOKEN: ${{ github.token }}
      #  run: |
      #    gh issue close ${{ github.event.issue.number }} -r Completed -c "@${{ github.event.issue.user.login }} your repository was created and is now accessible here: ${{ steps.create-repo.outputs.repo_url }}"
      #- name: Create comment on failure
      #  if: failure()
      #  env:
      #    GH_TOKEN: ${{ github.token }}
      #  run: |
      #    gh issue comment ${{ github.event.issue.number }} -b "@${{ github.event.issue.user.login }} there were some problems provisioning your repo. Please reach out to your org owner for additional help. Thank you."
